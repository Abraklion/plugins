{"version":3,"file":"select.js","mappings":"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","sources":["webpack://gulp-html-scss/./src/js/core/component.js","webpack://gulp-html-scss/./src/js/select2.js"],"sourcesContent":["\r\n/**\r\n *  Базовый класс для компонентов\r\n * */\r\nexport default class Component {\r\n\r\n  /**\r\n   * Конструктор\r\n   * @param {string} id         - находит или создает компонент.\r\n   * @param {Object=} options   - конфигурация.\r\n   * @param {string|null} [options.create] - названи тега, генерировать компонент программно(по умолчанию отбирается со страницы)\r\n   * @param {string} [options.display] - тип отображения элемента на странице при показе\r\n   */\r\n  constructor(id,{\r\n    create = null,\r\n    display = 'block'\r\n  } = {}) {\r\n\r\n    (!create) ? this.$el = document.querySelector(id) :\r\n                this.$el = document.createElement(create)\r\n                this.$el.setAttribute('id', id.slice(1))\r\n\r\n    this._display = display\r\n  }\r\n\r\n  /**\r\n   * Интерфейс компонента\r\n   * @return {void}\r\n   */\r\n  init() {}\r\n\r\n  /**\r\n   * Скрывает компонент\r\n   * @return {void}\r\n   */\r\n  hide() {\r\n    this.$el.style.display = 'none'\r\n\r\n    this._onHide() // -> после скрытия компонента вызываем метод\r\n  }\r\n\r\n  /**\r\n   * Показать компонент\r\n   * @return {void}\r\n   */\r\n  show() {\r\n    this.$el.style.display = this._display\r\n\r\n    this._onShow() // -> после показа компонента вызываем метод\r\n  }\r\n\r\n  /**\r\n   * Действия после скрытия компонента (хук)\r\n   * @return {void}\r\n   */\r\n  _onHide() {\r\n\r\n  }\r\n\r\n  /**\r\n   * Действия после показа компонента (хук)\r\n   * @return {void}\r\n   */\r\n  _onShow() {\r\n\r\n  }\r\n\r\n}\r\n","import $ from 'jquery'\nimport 'select2'\nimport 'jquery-validation'\n\nimport Component from \"./core/component\";\n\n/* =================================== *\n *  Плагин Select2 (Кастомные селекты) *\n * =================================== */\n\n/**\n *  Форма\n * */\nclass FormComponent extends Component {\n\n  /**\n   * Конструктор\n   * @param {string} id      - находит компонент.\n   */\n  constructor(id) {\n\n    super(id);\n\n    this._init()\n  }\n\n  /**\n   * Интерфейс компонента\n   * @return {void}\n   */\n  _init() {\n    this._select2()\n\n    this.form = this._validate()\n\n    this.$el.addEventListener('submit', submitHandler.bind(this))\n  }\n\n  /**\n   * Настройки кастомный селектов\n   * @return {Object}\n   */\n  _select2() {\n\n    /** русификация */\n    const lang = {\n      searching: function () {\n        return \"Поиск...\";\n      },\n      noResults: function () {\n        return \"Совпадений не найдено\";\n      },\n\n      loadingMore:function(){\n        return\"Загрузка…\";\n      },\n\n      errorLoading: function () {\n        return \"Результаты не удалось загрузить\";\n      },\n\n      maximumSelected: function(e){\n        let str=\"Вы можете выбрать не более \"+ e.maximum +\" элемент\";\n        return str += (e.maximum === 1) ? 'a' : 'ов';\n      }\n    }\n\n    /** конфигурация однострочного списка */\n    const config = {\n      debug : false, //-> включить отладочные сообщения в консоли браузера\n\n      disabled: false, //-> значение true, управление выбором будет отключено\n\n      multiple: false, //-> включает режим множественного выбора\n\n      //width: '100%', //-> настройка ширины списка\n\n      selectOnClose: false, //-> автоматически выбирает пункт при закрытии раскрывающегося списка\n      tags: false, //-> динамически создавать пункты которых нет в списки. Оф дока: https://select2.org/tagging\n\n      selectionCssClass: 'select', //-> добавляет дополнительные классы CSS в активный список. по умолчанию: ''\n      dropdownCssClass: 'select-dropdown', //-> добавляет дополнительные классы CSS в раскрывающийся список. по умолчанию: ''\n\n      theme: 'default', //-> настройка темы. по умолчанию: default\n      // templateSelection: callback, //-> настраевает шаблон автовного пункта списка. Оф дока: https://select2.org/selections#templating\n      // templateResult: callback,    //-> настраевает шаблон пунктов раскрывающегося списка. Оф дока: https://select2.org/dropdown#templating\n\n      dropdownParent: $(document.body), //-> в каком блоке будет инициализироваться раскрывающийся список и относительно этого блока позицианироваться\n\n      minimumResultsForSearch: 6, //-> минимальное количество результатов, необходимое для отображения окна поиска. по умолчанию: 0\n      minimumInputLength: 0, //-> минимальное количество символов для поиска\n      maximumInputLength: 0, //-> максимальное количество символов для поиска\n\n      // язык оф дока: https://select2.org/i18n\n      language: {\n        // все названия свойств можно найти в языковый файла в select2\n        ...lang\n      }\n    }\n\n    /** конфигурация списка с множественным выбором */\n    const configMultiple = {\n      debug: false, //-> включить отладочные сообщения в консоли браузера\n\n      disabled: false, //-> значение true, управление выбором будет отключено\n\n      multiple: true, //-> включает режим множественного выбора\n      allowClear: true, //-> появляется кнопка [x] которая сбрасывает все выбраные пункты\n\n      //width: '100%', //-> настройка ширины списка\n\n      selectOnClose: false, //-> автоматически выбирает пункт при закрытии раскрывающегося списка\n      tags: false, //-> динамически создавать пункты которых нет в списки. Оф дока: https://select2.org/tagging\n\n      selectionCssClass: 'select', //-> добавляет дополнительные классы CSS в активный список. по умолчанию: ''\n      dropdownCssClass: 'select-dropdown', //-> добавляет дополнительные классы CSS в раскрывающийся список. по умолчанию: ''\n\n      theme: 'default', //-> настройка темы. по умолчанию: default\n      // templateSelection: callback, //-> настраевает шаблон автовного пункта списка. Оф дока: https://select2.org/selections#templating\n      // templateResult: callback,    //-> настраевает шаблон пунктов раскрывающегося списка. Оф дока: https://select2.org/dropdown#templating\n\n      dropdownParent: $(document.body), //-> в каком блоке будет инициализироваться раскрывающийся список и относительно этого блока позицианироваться\n\n      // только для списка с [множественным выбором]\n      closeOnSelect: false, //-> предотвращающая закрытие раскрывающегося списка при выборе\n\n      maximumSelectionLength: 0, //-> макс. количество элементов, которые могут быть выбраны. по умолчанию: 0\n\n      // язык оф дока: https://select2.org/i18n\n      language: {\n        // все названия свойств можно найти в языковый файла в select2\n        ...lang\n      }\n    }\n\n    let data = [\n      {\n        id: '',\n        text: ''\n      },\n      {\n        id: 1,\n        text: 'ОК \"ОЗНА\"'\n      },\n      {\n        id: 2,\n        text: 'ОК \"Инжинеринг\"'\n      },\n      {\n        id: 3,\n        text: 'ОК \"Диджитал-солютион\"'\n      },\n      {\n        id: 4,\n        text: 'ОК \"ОЗНАтаир\"'\n      }\n    ];\n\n    /**\n     * переопредиления параметров по умолчанию перед инициализацией списков\n     * */\n    // оф дока: https://select2.org/configuration/defaults\n    $.fn.select2.defaults.set(\"width\", \"100%\");\n\n    /**\n     * Дивизион список (стандарт)\n     * */\n    $('.select-division').select2({\n      placeholder: 'выберите дивизион', // -> текст по умолчанию. по умолчанию: null\n\n      data : data, // -> конфигурации из локального массива\n\n      ...config\n    })\n\n    /**\n     * Отдел список (стандарт)\n     * */\n    $('.select-department').select2({\n      placeholder: 'выберите отдел', // -> текст по умолчанию. по умолчанию: null\n\n      ...config\n    })\n\n    /**\n     * Должность список (множественным выбор)\n     * */\n    $('.select-post').select2({\n      placeholder: 'выберите должность', // -> текст по умолчанию. Не нужен пустой option в html. по умолчанию: null\n\n      ...configMultiple,\n    })\n\n    /**\n     * Аттестаты список (множественным выбор)\n     * */\n    let selectCertificate =  $('.select-certificate')\n\n    selectCertificate.select2({\n      ...configMultiple\n    })\n\n    // отключить поиск для полей с множественным выбором\n    selectCertificate.on('select2:opening select2:closing', function( event ) {\n      let $searchfield = $(this).parent().find('.select2-search__field');\n      $searchfield.prop('disabled', true);\n    });\n\n    /** Ajax **/\n\n    /**\n     * Разряд список (множественным выбор) | Ajax\n     * */\n    $('.js-select-class').select2({\n      ajax: {\n        // все остальные настройки как у jQuery.ajax\n        dataType: 'json', //-> в каком формате хотим получить данные\n\n        url: 'data/select-multiple.json', //-> url куда отправляем\n\n        data: function (params) { //-> изменить параметры, отправляемые запросом\n\n        },\n\n        processResults: function (data,params) {   //-> изменить данные ответа\n          if(params.term) {\n            data.results = data.results.filter(elem => {\n              return elem.text.toUpperCase().includes(params.term.toUpperCase())\n            })\n          }\n\n          return data\n        },\n\n        delay: 250 //-> подождите 250 миллисекунд, прежде чем запускать запрос\n      },\n\n      ...configMultiple\n    })\n\n    /**\n     * Стаж список | Ajax\n     * */\n    $('.js-select-age').select2({\n      ajax: {\n        // все остальные настройки как у jQuery.ajax\n        dataType: 'json', //-> в каком формате хотим получить данные\n\n        url: 'data/select.json', //-> url куда отправляем\n\n        data: function (params) { //-> изменить параметры, отправляемые запросом\n\n        },\n\n        processResults: function (data,params) {   //-> изменить данные ответа\n          if(params.term) {\n            data.results = data.results.filter(elem => {\n              return elem.text.toUpperCase().includes(params.term.toUpperCase())\n            })\n          }\n\n          return data\n        },\n\n        delay: 250 //-> подождите 250 миллисекунд, прежде чем запускать запрос\n      },\n\n      ...config\n    })\n\n\n    /** Связные списки **/\n\n    /**\n     * Дополнительно список (далее SelectA)\n     * */\n    let $selectAdditions =  $('.select-additions')\n\n    $selectAdditions.select2({\n      placeholder: 'выберите дополнительно',\n\n      ...config\n    })\n\n    /**\n     * Значения список (далее SelectB)\n     * */\n    let $selectValue =  $('.select-value')\n\n    $selectValue.select2({\n      placeholder: 'выберите значения',\n\n      ...config,\n\n      disabled: true\n    })\n\n\n    let mapApi = [\n      'select-addon-blood.json',\n      'select-family-status.json',\n      'select-residence.json'\n    ]\n\n    $selectAdditions.on('select2:select', function (e) {\n      // запускается при выборе option\n\n      // value выбраного option\n      let selectId = +e.params.data.id\n\n      // отправляем запрос на сервер что бы получить данные SelectB\n      $.ajax({\n        type: 'GET',\n        url: 'data/' + mapApi[selectId - 1]\n      }).then(function (data) {\n\n        // удаляем option SelectB\n        let $option = $selectValue.find('option')\n\n        for (let i = 1; i < $option.length; i++) {\n          $option[i].remove()\n        }\n\n        // добавляем option SelectB\n        data.results.forEach(item => {\n          let option = new Option(item.text, item.id, false, false);\n          $selectValue.append(option);\n        })\n        $selectValue.trigger('change')\n\n        // обновляем кастомный селект Select2 отвечающий за SelectB\n        $selectValue.trigger({\n          type: 'select2:select',\n          params: {\n            data: data.results\n          }\n        });\n\n        // разблокируем SelectB\n        $selectValue.prop('disabled', false);\n      });\n\n    })\n\n    /** Управлением списком после инициализации **/\n\n    /**\n     * Добавить новый пункт:\n     *\n     * let newOption = new Option('название', 'значение', false, false)\n     * $(селектор селекта).append(newOption).trigger('change')\n     *\n     * Добавить новый пункт ,если не существует:\n     *\n     * if (selectClass.find(\"option[value='\" + \"значение\" + \"']\").length) {\n     *   // если существует\n     * } else {\n     *   let newOption = new Option('название', 'значение', false, false);\n     *   $(селектор селекта).append(newOption).trigger('change');\n     * }\n     * */\n\n    /**\n     * Выбор пунктов в селекте:\n     *\n     * $(селектор селекта).val(['1', '2'])\n     * $(селектор селекта).trigger('change')\n     *\n     * */\n\n    /**\n     * Получить выбраные пункты:\n     *\n     * // как массив\n     * $(селектор селекта).select2('data')\n     *\n     * // как коллекцию\n     * $(селектор селекта).find(':selected')\n     *\n     * */\n\n    /**\n     * Сбросить все пункты (reset)\n     *\n     * $(селектор селекта).val(-1).trigger('change')\n     *\n     * */\n\n    /**\n     * Методы оф дока: https://select2.org/programmatic-control/methods\n     *\n     * $(селектор селекта).select2('open') - открыть список\n     * $(селектор селекта).select2('close') - закрыть список\n     * $(селектор селекта).hasClass(\"select2-hidden-accessible\") - инициализирован ли плагин select\n     * $(селектор селекта).select2('destroy') - разрушить плагин если он инициализирован\n     *\n     * */\n\n    /**\n     * События\n     *\n     * change -\tзапускается всякий раз, когда пункт выбран или удален.\n     * change.select2 -\tзапускается всякий раз, когда пункт выбран или удален, но только на select2 не запуская глобальный change.\n     *\n     * select2:closing - срабатывает перед закрытием раскрывающегося списка.это событие можно предотвратить.\n     * select2:close - срабатывает всякий раз, когда раскрывающийся список закрывается.\n     *\n     * select2:opening - запускается перед открытием раскрывающегося списка. это событие можно предотвратить.\n     * select2:open - запускается всякий раз, когда открывается раскрывающийся список.\n     *\n     * select2:selecting - запускается перед выбором пункта.\n     * select2:select - запускается при выборе пункта.\n     *\n     * select2:unselecting - запускается перед удалением пункта\n     * select2:unselect - запускается всякий раз, когда выделение удаляется\n     *\n     * select2:clearing - запускается до того, как все выборы будут очищены.\n     * select2:clear - запускается всякий раз, когда все выборы очищаются.\n     *\n     * */\n\n  }\n\n  /**\n   * Настройки валидирования формы\n   * @return {Object}\n   */\n  _validate() {\n\n    // для кастомный селектов\n    $('.sForm__select').on('change.select2', function () {\n      $(this).prev('.sForm__label').trigger('click')\n    })\n\n    // https://jqueryvalidation.org/ - дока\n\n    return $(this.$el).validate({\n      // -> включить режим отладки\n      debug: false,\n\n      // -> настройка полей формы (какие поля валидировать)\n      rules: {\n        attestation_date: {\n          required: true,\n          dateISO: true\n        },\n        next_attestation_date: {\n          required: true,\n          dateISO: true\n        },\n        division: {\n          required: true\n        },\n        department: {\n          required: true\n        },\n        post: {\n          required: true\n        },\n        certificate: {\n          required: true\n        },\n        class: {\n          required: true\n        },\n        age: {\n          required: true\n        },\n        additions: {\n          required: true\n        },\n        value: {\n          required: true\n        }\n      },\n\n      // -> настройка пользовательских сообщений (для валидируемых полей)\n      messages: {\n        attestation_date: {\n          required: 'Пожалуйста, укажите дату аттестации.',\n          dateISO: 'Пожалуйста, введите дату формате в (дд.мм.гггг).'\n        },\n        next_attestation_date: {\n          required: 'Пожалуйста, укажите дату следующий аттестации.',\n          dateISO: 'Пожалуйста, введите дату формате в (дд.мм.гггг).'\n        },\n        division: {\n          required: 'Пожалуйста, укажите дивизион.',\n        },\n        department: {\n          required: 'Пожалуйста, укажите отдел.'\n        },\n        post: {\n          required: 'Пожалуйста, укажите должность.'\n        },\n        certificate: {\n          required: 'Пожалуйста, добавьте аттестат.'\n        },\n        class: {\n          required: 'Пожалуйста, добавьте разряд.'\n        },\n        age: {\n          required: 'Пожалуйста, добавьте стаж.'\n        },\n        additions: {\n          required: 'Пожалуйста, добавьте дополнительно.'\n        },\n        value: {\n          required: 'Пожалуйста, добавьте значение.'\n        }\n      },\n\n      // -> класс добавляется к сообщению и полю, если оно НЕ валидно (по умолчанию: \"error\")\n      errorClass: 'sForm__error sForm__error--no-color',\n\n      // -> тэг который будет создаваться, в него записываться сообщения (по умолчанию: \"label\")\n      errorElement: 'span',\n\n      // -> настраеваем область куда показывать ошибки\n      errorPlacement: function(error, element) {\n        // https://jqueryvalidation.org/category/plugin/#errorplacement - оф дока\n\n        error.appendTo(element.prev());\n      },\n\n      // -> если форма НЕ валидна и НЕ готова в отпраке на сервер, попадаем в этот обработчик\n      invalidHandler: function(event, validator) {\n        // https://jqueryvalidation.org/category/plugin/#invalidhandler - оф дока\n\n\n        // Пример. Отображает под формой сообщение сколько полей НЕ валидны\n        let  errors = validator.numberOfInvalids(),\n          quantity = $(\".quantity\");\n\n        if (errors) {\n          quantity.html(`Вы пропустили <b>${errors}</b> поля. Они были выделены`);\n\n          quantity.show();\n        } else {\n          quantity.hide();\n        }\n      }\n\n    })\n\n\n  }\n\n}\n\n/**\n * Обработчик отправки формы\n * @return {void}\n */\nasync function submitHandler(e) {\n\n  e.preventDefault()\n\n  if(this.form.form()){\n    let btnForm = $(e.target).find('.sForm__button')\n\n    btnForm.prop(\"disabled\", true)\n\n    try{\n\n      console.log(\"Отправляем аякс запрос\")\n\n    } catch (e) {\n\n      console.log(\"Ошибка\")\n\n    } finally {\n\n      setTimeout(() => {\n        btnForm.prop(\"disabled\", false)\n\n        // сброс формы\n        this.form.resetForm()\n        this.$el.reset()\n        $('.sForm__error').remove()\n        $('.sForm__input').removeAttr('aria-describedby')\n        $('.quantity').text('')\n\n        // сбросить кастомные селекты\n        $('.sForm__select').val(null).trigger('change')\n\n        // заблокировать кастомные селект\n        $('.select-value').prop('disabled', true);\n      }, 1000)\n\n    }\n  }\n\n}\n\n// вызов\nconst form = new FormComponent('#myForm')\n"],"names":["Component","constructor","id","create","display","$el","document","querySelector","createElement","setAttribute","slice","_display","init","hide","style","_onHide","show","_onShow","$","FormComponent","_init","_select2","form","_validate","addEventListener","submitHandler","bind","lang","searching","noResults","loadingMore","errorLoading","maximumSelected","e","str","maximum","config","debug","disabled","multiple","selectOnClose","tags","selectionCssClass","dropdownCssClass","theme","dropdownParent","body","minimumResultsForSearch","minimumInputLength","maximumInputLength","language","configMultiple","allowClear","closeOnSelect","maximumSelectionLength","data","text","fn","select2","defaults","set","placeholder","selectCertificate","on","event","$searchfield","parent","find","prop","ajax","dataType","url","params","processResults","term","results","filter","elem","toUpperCase","includes","delay","$selectAdditions","$selectValue","mapApi","selectId","type","then","$option","i","length","remove","forEach","item","option","Option","append","trigger","prev","validate","rules","attestation_date","required","dateISO","next_attestation_date","division","department","post","certificate","class","age","additions","value","messages","errorClass","errorElement","errorPlacement","error","element","appendTo","invalidHandler","validator","errors","numberOfInvalids","quantity","html","preventDefault","btnForm","target","console","log","setTimeout","resetForm","reset","removeAttr","val"],"sourceRoot":""}